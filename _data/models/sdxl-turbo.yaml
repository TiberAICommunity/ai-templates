name: sdxl-turbo
title: SDXL Turbo
model_id: stabilityai/sdxl-turbo
description: "Single-step inference model for real-time image generation, optimized for Intel GPUs. SDXL Turbo achieves remarkable quality in just one step, making it ideal for rapid prototyping and interactive applications."

license_notice: "Before using this model, please review the license terms and usage rights. This deployment supports single and multi-GPU setups - see <a href='https://github.com/rahulunair/xpu_ray' target='_blank'>our repository</a> for advanced deployment options."

context_window: "1024x1024 pixels"
hardware_required: "Intel Max Series GPU - VM or Bare Metal configurations on Intel Tiber AI Cloud"

strengths:
  - "Real-time image generation"
  - "Single-step inference"
  - "Interactive speeds"
  - "Optimized for Intel GPUs"

use_cases:
  - "Real-time applications"
  - "Interactive design tools"
  - "Rapid prototyping"

model_specs:
  steps: 1
  guidance: 0.0
  min_size: 512
  max_size: 1024
  performance: "~15 images/sec on single GPU"

architecture_diagram: |
  flowchart LR
      Client([Client])
      Traefik[Traefik Proxy]
      Auth[Auth Service]
      Ray[Ray Serve]
      Turbo[SDXL Turbo]

      Client --> Traefik
      Traefik --> Auth
      Auth --> Traefik
      Traefik --> Ray
      Ray --> Turbo
      Turbo --> Ray
      Ray --> Traefik
      Traefik --> Client

      subgraph Internal["Internal Network"]
          Traefik
          Auth
          Ray
          Turbo
      end

key_features:
  - "üîí Token authentication with auto-ban protection"
  - "üö¶ Rate limiting: 30 req/s global (60 burst), 15 req/s per IP"
  - "üõ°Ô∏è Security headers and IP protection"
  - "üîÑ Health monitoring and automatic recovery"
  - "üöÄ Intel GPU optimization with multi-GPU support"
  - "‚ö° Ray Serve for scaling and load balancing"

deployment_steps:
  - title: "1. Setup Prerequisites"
    description: "Create Intel Tiber AI Cloud account and select GPU Max VM"
    link: "https://cloud.intel.com"
    link_text: "Visit Intel Cloud Portal"

  - title: "2. Deploy Service"
    description: "Clone repository and deploy SDXL Turbo model with authentication"
    code: |
      git clone https://github.com/rahulunair/xpu_ray.git && \
      cd xpu_ray && \
      ./deploy.sh sdxl-turbo

  - title: "3. Setup Authentication"
    description: "Configure authentication token"
    code: |
      source .auth_token.env
      echo $VALID_TOKEN  # Verify token is set

  - title: "4. Generate Images"
    description: "Make requests to generate images"
    code: |
      curl -X POST http://localhost:8000/imagine/generate \
        -H "Authorization: Bearer $VALID_TOKEN" \
        -H "Content-Type: application/json" \
        -d '{
          "prompt": "A serene landscape with mountains at sunset",
          "negative_prompt": "blurry, low quality",
          "num_inference_steps": 1,
          "guidance_scale": 0.0,
          "width": 1024,
          "height": 1024
        }'

  - title: "5. Management"
    description: "Monitor, stop, or switch models"
    code: |
      # Monitor service
      ./monitor_sd.sh

      # Stop services
      ./cleanup.sh

      # Switch models
      ./deploy.sh sdxl --skip-base

tags:
  - label: "Diffusion"
    color: "#3B82F6"
  - label: "Image"
    color: "#10B981"
  - label: "SDXL"
    color: "#8B5CF6"
  - label: "Ray"
    color: "#F59E0B"
  - label: "Real-time"
    color: "#EF4444" 