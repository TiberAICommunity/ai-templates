name: flan-ul2
title: Flan-UL2
model_id: google/flan-ul2
description: "Google's Flan-UL2 model running on Text Generation Inference (TGI) on Intel XPU. Flan-UL2 excels at instruction-following tasks like translation, summarization, and question answering. For multi-GPU deployments and advanced configurations, please visit our GitHub repository."

license_notice: "Before using this model, please review the license terms and usage rights on the Hugging Face model page. This deployment supports single and multi-GPU setups - see <a href='https://github.com/tiberaicommunity/xpu_tgi' target='_blank'>our repository</a> for advanced deployment options."

context_window: "4096 tokens"
hardware_required: "Intel Max Series GPU (1100) VM - supports single/multi GPU deployments"

strengths:
  - "Instruction following"
  - "Translation tasks"
  - "Text summarization"
  - "Structured responses"

use_cases:
  - "Language translation"
  - "Text summarization"
  - "Question answering"
  - "Classification tasks"

tgi: true
architecture_diagram: |
  flowchart LR
      Client([Client])
      Traefik[Traefik Proxy]
      Auth[Auth Service]
      TGI[TGI Service]

      Client --> Traefik
      Traefik --> Auth
      Auth --> Traefik
      Traefik --> TGI
      TGI --> Traefik
      Traefik --> Client

      subgraph Internal["Internal Network"]
          Traefik
          Auth
          TGI
      end

key_features:
  - "üîí Token-based authentication with automatic ban after failed attempts"
  - "üö¶ Rate limiting (global: 10 req/s, per-IP: 10 req/s)"
  - "üõ°Ô∏è Security headers and IP protection"
  - "üîÑ Health monitoring and automatic recovery"
  - "üöÄ Optimized for Intel GPUs with multi-GPU support"

deployment_steps:
  - title: "1. Setup Prerequisites"
    description: "Create Intel Tiber AI Cloud account and select GPU Max VM"
    link: "https://cloud.intel.com"
    link_text: "Visit Intel Cloud Portal"

  - title: "2. Quick Deploy (Recommended)"
    description: "Deploy the model with a single command (see repository for multi-GPU deployments)"
    code: |
      curl -sSL https://raw.githubusercontent.com/tiberaicommunity/xpu_tgi/main/quick-deploy.sh \
        | bash -s -- Flan-UL2

  - title: "3. Access Options"
    description: "Multiple ways to access your deployed model (GPU number is automatically assigned, typically starting with gpu0)"
    code: |
      # Local Access (same machine):
      curl -X POST http://localhost:8000/flan-ul2/gpu0/generate \
        -H "Authorization: Bearer YOUR_TOKEN" \
        -H "Content-Type: application/json" \
        -d '{"inputs": "Summarize this text: The development of quantum computing represents a significant leap in computational capabilities..."}'

      # Remote Access (evaluation only):
      ./tunnel.sh  # Creates temporary public URL
      # Then use: https://YOUR-TUNNEL-URL/flan-ul2/gpu0/generate

      # SSH Tunnel (recommended):
      ssh -L 8000:localhost:8000 -J guest@guest-ip user@your-vm-ip
      # Then use: http://localhost:8000/flan-ul2/gpu0/generate

  - title: "4. Managing Services"
    description: "Control and monitor your deployment"
    code: |
      # Check status
      ./tgi-status.sh

      # Stop services
      ./service_cleanup.sh                    # Stop all services
      ./service_cleanup.sh --gpu N (or all)   # Stop specific GPU or all GPUs

tags:
  - label: "Transformer"
    color: "#3B82F6"
  - label: "4K context"
    color: "#10B981"
  - label: "Instruction"
    color: "#8B5CF6"
  - label: "TGI"
    color: "#EF4444"
  - label: "Google"
    color: "#34D399"
  - label: "Translation"
    color: "#F472B6"
