name: stable-diffusion-xl
title: Stable Diffusion XL
model_id: stabilityai/stable-diffusion-xl-base-1.0
description: "High-quality image generation model running on Intel XPU Ray Service. SDXL offers the highest quality image generation with 25 inference steps, optimized for Intel GPUs using Intel Extension for PyTorch and Ray Serve for deployment."

license_notice: "Before using this model, please review the license terms and usage rights. This deployment supports single and multi-GPU setups - see <a href='https://github.com/rahulunair/xpu_ray' target='_blank'>our repository</a> for advanced deployment options."

context_window: "1024x1024 pixels"
hardware_required: "Intel Max Series GPU - VM or Bare Metal configurations on Intel Tiber AI Cloud"

strengths:
  - "Highest quality image generation"
  - "Advanced prompt understanding"
  - "Detailed compositions"
  - "Optimized for Intel GPUs"

use_cases:
  - "Professional art creation"
  - "High-quality image generation"
  - "Detailed visual content"

model_specs:
  steps: 25
  guidance: 7.5
  min_size: 512
  max_size: 1024
  performance: "~1.5 images/sec on single GPU"

architecture_diagram: |
  flowchart LR
      Client([Client])
      Traefik[Traefik Proxy]
      Auth[Auth Service]
      Ray[Ray Serve]
      SDXL[SDXL Service]

      Client --> Traefik
      Traefik --> Auth
      Auth --> Traefik
      Traefik --> Ray
      Ray --> SDXL
      SDXL --> Ray
      Ray --> Traefik
      Traefik --> Client

      subgraph Internal["Internal Network"]
          Traefik
          Auth
          Ray
          SDXL
      end

key_features:
  - "üîí Token authentication with auto-ban protection"
  - "üö¶ Rate limiting: 30 req/s global (60 burst), 15 req/s per IP"
  - "üõ°Ô∏è Security headers and IP protection"
  - "üîÑ Health monitoring and automatic recovery"
  - "üöÄ Optimized for Intel GPUs with multi-GPU support"
  - "‚ö° Ray Serve for scaling and load balancing"
  
deployment_steps:
  - title: "1. Setup Prerequisites"
    description: "Create Intel Tiber AI Cloud account, select GPU Max VM, and connect to your instance."
    link: "https://cloud.intel.com"
    link_text: "Visit Intel Cloud Portal"

  - title: "2. Deploy Service"
    description: "Clone repository and deploy SDXL model with authentication"
    code: |
      git clone https://github.com/rahulunair/xpu_ray.git && \
      cd xpu_ray && \
      ./deploy.sh sdxl

  - title: "3. Try Demo UI"
    description: "Launch the demo UI and API documentation interface"
    code: |
      bash ~/xpu_ray/deploy_ui.sh

  - title: "4. Setup Authentication"
    description: "Configure authentication token"
    collapsed: true
    code: |
      source .auth_token.env
      echo $VALID_TOKEN  # Verify token is set

  - title: "5. Generate Images"
    description: "Make requests to generate images"
    collapsed: true
    code: |
      curl -X POST http://localhost:8000/imagine/generate \
        -H "Authorization: Bearer $VALID_TOKEN" \
        -H "Content-Type: application/json" \
        -d '{
          "prompt": "A serene landscape with mountains at sunset",
          "negative_prompt": "blurry, low quality",
          "num_inference_steps": 25,
          "guidance_scale": 7.5,
          "width": 1024,
          "height": 1024
        }'

  - title: "6. Management"
    description: "Monitor, stop, or switch models"
    collapsed: true
    code: |
      # Monitor service
      ./monitor_sd.sh

      # Stop services
      ./cleanup.sh

      # Switch models
      ./deploy.sh sdxl-turbo --skip-base

tags:
  - label: "Diffusion"
    color: "#3B82F6"
  - label: "Image"
    color: "#10B981"
  - label: "SDXL"
    color: "#8B5CF6"
  - label: "Ray"
    color: "#F59E0B"
  - label: "Production"
    color: "#EF4444"