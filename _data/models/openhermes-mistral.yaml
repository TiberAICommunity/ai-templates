name: openhermes-mistral
title: OpenHermes Mistral
model_id: teknium/OpenHermes-Mistral
description: "Teknium's OpenHermes-Mistral running on Text Generation Inference (TGI). A Mistral-based model known for its efficient performance and strong reasoning capabilities."

license_notice: "Before using this model, please review the license terms and usage rights on the Hugging Face model page."

# TGI specific configuration
tgi: true
architecture_diagram: |
  flowchart LR
      Client([Client])
      Traefik[Traefik Proxy]
      Auth[Auth Service]
      TGI[TGI Service]

      Client --> Traefik
      Traefik --> Auth
      Auth --> Traefik
      Traefik --> TGI
      TGI --> Traefik
      Traefik --> Client

      subgraph Internal["Internal Network"]
          Traefik
          Auth
          TGI
      end

key_features:
  - "üîí Token-based authentication with automatic ban after failed attempts"
  - "üö¶ Rate limiting (global: 10 req/s, per-IP: 10 req/s)"
  - "üõ°Ô∏è Security headers and IP protection"
  - "üîÑ Health monitoring and automatic recovery"
  - "üöÄ Optimized for Intel GPUs"

# Model specific information
context_window: "8192 tokens"
strengths:
  - "Efficient reasoning"
  - "Balanced responses"
  - "Instruction following"
  - "Technical explanations"

use_cases:
  - "Technical explanations"
  - "Logical reasoning"
  - "Code assistance"
  - "General knowledge tasks"

configuration: |
  MODEL_NAME=openhermes-mistral-tgi
  MODEL_ID=teknium/OpenHermes-Mistral
  TGI_VERSION=2.4.0-intel-xpu
  PORT=8086
  SHM_SIZE=2g
  MAX_CONCURRENT_REQUESTS=1
  MAX_BATCH_SIZE=1
  MAX_TOTAL_TOKENS=8192
  MAX_INPUT_LENGTH=4096
  MAX_WAITING_TOKENS=10

# Tags for filtering
tags:
  - label: "Transformer"
    color: "#3B82F6"
  - label: "8K context"
    color: "#10B981"
  - label: "Instruction"
    color: "#8B5CF6"
  - label: "TGI"
    color: "#EF4444"
  - label: "Mistral"
    color: "#EC4899"

deployment_steps:
  - title: "Create Account"
    description: "Create a standard account on Intel Tiber AI Cloud"
    link: "https://cloud.intel.com"
    link_text: "Visit Intel Cloud Portal"

  - title: "Select Hardware"
    description: "Select an Intel Data Center Max Series GPU VM"

  - title: "Clone Repository"
    description: "Clone the TGI repository and navigate to it"
    code: |
      git clone https://github.com/tiberaicommunity/xpu_tgi
      cd xpu_tgi

  - title: "Generate Token"
    description: "Generate authentication token for secure access using the provided utility"
    code: "python utils/generate_token.py"

  - title: "Start Model"
    description: "Start the OpenHermes model service with caching enabled using your generated token"
    code: "VALID_TOKEN=YOUR_TOKEN ./start.sh OpenHermes-Mistral --cache-models"

  - title: "Access Options"
    description: "Choose one of these methods to interact with the model:"
    sub_steps:
      - title: "Local Access"
        description: "Use localhost directly if running on the same machine"
        code: |
          curl -X POST http://localhost:8000/generate \
            -H 'Content-Type: application/json' \
            -H 'Authorization: Bearer YOUR_TOKEN' \
            -d '{"inputs": "Explain the concept of recursion:"}'

      - title: "SSH Tunnel"
        description: "Add '-L 8000:localhost:8000' to your SSH connection to access from your local machine"
        code: "ssh -L 8000:localhost:8000 guest@guest-ip user@your-vm-ip"

      - title: "Temporary URL"
        description: "Use the provided tunnel script to create a temporary public URL using cloudflare (eval only)"
        code: |
          # In a new terminal:
          ./tunnel.sh

          # Then use the generated cloudflare URL:
          curl -X POST https://YOUR-TUNNEL-URL/generate \
            -H 'Content-Type: application/json' \
            -H 'Authorization: Bearer YOUR_TOKEN' \
            -d '{"inputs": "Explain the concept of recursion:"}'