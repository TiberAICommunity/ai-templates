name: cogvideox-5b
title: CogVideoX-5B
model_id: cogvideo/cogvideox-5b
description: "A 5B parameter text-to-video generation model optimized for Intel GPUs using Ray Serve. Capable of generating longer, higher-quality videos up to 6 seconds (48 frames at 8 FPS) with enhanced visual coherence and detail."

license_notice: "Before using this model, please review the license terms and usage rights. This deployment supports single and multi-GPU setups - see <a href='https://github.com/rahulunair/xpu_video' target='_blank'>our repository</a> for advanced deployment options."

context_window: "48 frames at 8 FPS"
hardware_required: "Intel Max Series GPU - VM or Bare Metal configurations on Intel Tiber AI Cloud (48GB+ RAM recommended)"

strengths:
  - "Higher quality generation"
  - "Longer video sequences"
  - "Better temporal consistency"
  - "Enhanced detail rendering"

use_cases:
  - "Professional video creation"
  - "Extended animations"
  - "High-quality content production"
  - "Detailed scene generation"

model_specs:
  frames: 48
  fps: 8
  guidance: 7.5
  steps: 75
  performance: "~1 video every 3-4 minutes on single GPU"

architecture_diagram: |
  flowchart LR
      Client([Client])
      Traefik[Traefik Proxy]
      Auth[Auth Service]
      Ray[Ray Service]

      Client --> Traefik
      Traefik --> Auth
      Auth --> Traefik
      Traefik --> Ray
      Ray --> Traefik
      Traefik --> Client

      subgraph Internal["Internal Network"]
          Traefik
          Auth
          Ray
      end

deployment_steps:
  - title: "1. Setup Prerequisites"
    description: "Create Intel Tiber AI Cloud account, select GPU Max VM, and connect to your instance."
    link: "https://cloud.intel.com"
    link_text: "Visit Intel Cloud Portal"

  - title: "2. Deploy Service"
    description: "Clone repository and deploy CogVideoX-5B model with authentication"
    code: |
      git clone https://github.com/rahulunair/xpu_video.git && \
      cd xpu_video && \
      ./deploy.sh cogvideox-5b

  - title: "3. Try Demo UI"
    description: "Launch the demo UI and API documentation interface"
    code: |
      bash ~/xpu_video/deploy_ui.sh

  - title: "4. Setup Authentication"
    description: "Configure authentication token"
    collapsed: true
    code: |
      source .auth_token.env
      echo $VALID_TOKEN  # Verify token is set

  - title: "5. Generate Videos"
    description: "Make requests to generate videos"
    collapsed: true
    code: |
      curl -X POST http://localhost:8000/imagine/generate \
        -H "Authorization: Bearer $VALID_TOKEN" \
        -H "Content-Type: application/json" \
        -d '{
          "prompt": "A majestic eagle soaring through a canyon at sunset, cinematic style",
          "negative_prompt": "blurry, low quality, distorted",
          "num_frames": 48,
          "fps": 8,
          "num_inference_steps": 75,
          "guidance_scale": 7.5
        }'

  - title: "6. Management"
    description: "Monitor, stop, or switch models"
    collapsed: true
    code: |
      # Monitor service
      ./monitor_video.sh

      # Stop services
      ./cleanup.sh

      # Switch models
      ./deploy.sh cogvideox-2b --skip-base

tags:
  - label: "Video"
    color: "#3B82F6"
  - label: "5B params"
    color: "#10B981"
  - label: "8 FPS"
    color: "#8B5CF6"
  - label: "Ray"
    color: "#F59E0B"
  - label: "High Quality"
    color: "#EF4444" 